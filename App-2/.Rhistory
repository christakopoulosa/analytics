max.words = 30,
scale = c(2, 0.1))
library(RColorBrewer)
##Create wordcloud
library(wordcloud)
wordcloud(words = corpus,
max.words = 30)
##load library RColorBrewer
library(RColorBrewer)
palette <- brewer.pal(h=9,
name = "Oranges")
palette <- brewer.pal(n = 9,
name = "Oranges")
colors <- palette[cut(data[,c(2)]), 9]
colors <- palette[cut(as.numeric(data[,c(2)])), 9]
dataAsDataFrame <- data.frame(date=index(data), coredata(data[,c(3,4,5,6,7)]))
View(dataAsDataFrame)
dataAsDataFrame$characterVector2 <- as.character(dataAsDataFrame$Q1..Overall..how.did.you.feel.about.the.service.you.received.today.)
dataAsDataFrame$characterVector3 <- as.character(dataAsDataFrame$Q3..What.Licensing.task.did.you.need.to.carry.out.today.)
dataAsDataFrame$characterVector2 <- as.character(dataAsDataFrame$Q4..How.easy.was.it.to.complete.this.task.)
dataAsDataFrame$characterVector2 <- as.character(dataAsDataFrame$Q5..If.you.found.it.fairly.or.
dataAsDataFrame$characterVector <- as.character(dataAsDataFrame$Q2..How.could.we.improve.this.service.)
dataAsDataFrame$characterVector2 <- as.character(dataAsDataFrame$Q1..Overall..how.did.you.feel.about.the.service.you.received.today.)
dataAsDataFrame$characterVector3 <- as.character(dataAsDataFrame$Q3..What.Licensing.task.did.you.need.to.carry.out.today.)
dataAsDataFrame$characterVector4 <- as.character(dataAsDataFrame$Q4..How.easy.was.it.to.complete.this.task.)
dataAsDataFrame$characterVector5 <- as.character(dataAsDataFrame$Q5..If.you.found.it.fairly.or.extremely.difficult.to.complete.this.task..please.could.you.say.why.this.was.)
corpus <- Corpus(VectorSource(dataAsDataFrame[,c(2:5)]))
corpus[[1]]$content
corpus <- tm_map(corpus, content_transformer(tolower))
corpus <- tm_map(corpus, removePunctuation)
corpus <- tm_map(corpus, removeWords, stopwords("english"))
corpus <- tm_map(corpus, stripWhitespace)
corpus <- tm_map(corpus, PlainTextDocument)
corpus[[1]]$content
corpus <- Corpus(VectorSource(corpus))
##Create wordcloud
library(wordcloud)
wordcloud(words = corpus,
max.words = 30)
head(dataAsDataFrame$characterVector, 5)
corpus <- Corpus(VectorSource(dataAsDataFrame$characterVector))
corpus[[1]]$content
corpus <- tm_map(corpus, content_transformer(tolower))
corpus <- tm_map(corpus, removePunctuation)
corpus <- tm_map(corpus, removeWords, stopwords("english"))
corpus <- tm_map(corpus, stripWhitespace)
corpus <- tm_map(corpus, PlainTextDocument)
corpus[[1]]$content
library(SnowballC)
corpus <- Corpus(VectorSource(corpus))
##Create wordcloud
library(wordcloud)
wordcloud(words = corpus,
max.words = 30)
dataAsDataFrame$characterVector <- as.character(dataAsDataFrame$Q2..How.could.we.improve.this.service.)
corpus <- Corpus(VectorSource(dataAsDataFrame$characterVector))
corpus[[1]]$content
corpus <- tm_map(corpus, content_transformer(tolower))
corpus <- tm_map(corpus, removePunctuation)
corpus <- tm_map(corpus, removeWords, stopwords("english"))
corpus <- tm_map(corpus, stripWhitespace)
corpus <- tm_map(corpus, PlainTextDocument)
corpus[[1]]$content
library(SnowballC)
corpus <- Corpus(VectorSource(corpus))
##Create wordcloud
library(wordcloud)
wordcloud(words = corpus,
max.words = 30)
##load library RColorBrewer
library(RColorBrewer)
palette <- brewer.pal(n = 9,
name = "Oranges")
colors <- palette[cut(dataAsDataFrame$Q1..Overall..how.did.you.feel.about.the.service.you.received.today., 4)]
colors <- palette[cut(dataAsDataFrame$Q1..Overall..how.did.you.feel.about.the.service.you.received.today., 4)]
colors <- palette[cut(dataAsDataFrame$Q1..Overall..how.did.you.feel.about.the.service.you.received.today., 4)]
unique(dataAsDataFrame$Q1..Overall..how.did.you.feel.about.the.service.you.received.today.)
colors <- palette[cut(dataAsDataFrame$Q1..Overall..how.did.you.feel.about.the.service.you.received.today., 4)]
colors <- palette[unique(dataAsDataFrame$Q1..Overall..how.did.you.feel.about.the.service.you.received.today., 4)]
wordcloud(
words = dataAsDataFrame$Q2..How.could.we.improve.this.service.,
max.words = 10,
colors = colors,
ordered.colors = TRUE)
help("brewer.pal")
library(wordcloud)
wordcloud(words = corpus,
max.words = 30)
library(RColorBrewer)
palette <- brewer.pal(n = 4,
name = "Oranges")
colors <- palette[unique(dataAsDataFrame$Q1..Overall..how.did.you.feel.about.the.service.you.received.today., 4)]
wordcloud(
words = dataAsDataFrame$Q2..How.could.we.improve.this.service.,
max.words = 10,
colors = colors,
ordered.colors = TRUE)
library(RColorBrewer)
palette <- brewer.pal(n = 499,
name = "Oranges")
library(RColorBrewer)
palette <- brewer.pal(n = 9,
name = "Oranges")
colors <- palette[unique(dataAsDataFrame$Q1..Overall..how.did.you.feel.about.the.service.you.received.today., 9)]
wordcloud(
words = dataAsDataFrame$Q2..How.could.we.improve.this.service.,
max.words = 10,
colors = colors,
ordered.colors = TRUE)
colors <- palette[unique(dataAsDataFrame$Q1..Overall..how.did.you.feel.about.the.service.you.received.today., 5)]
wordcloud(
words = dataAsDataFrame$Q2..How.could.we.improve.this.service.,
max.words = 10,
colors = colors,
ordered.colors = TRUE)
print(colors)
colors <- palette[unique(dataAsDataFrame$Q1..Overall..how.did.you.feel.about.the.service.you.received.today., 5)]
##load library RColorBrewer
library(RColorBrewer)
palette <- brewer.pal(n = 5,
name = "Oranges")
colors <- palette[unique(dataAsDataFrame$Q1..Overall..how.did.you.feel.about.the.service.you.received.today., 5)]
##Create wordcloud
library(wordcloud)
wordcloud(words = corpus,
max.words = 30,
ordered.colors = TRUE,
colors=brewer.pal(8, "Dark2")[factor(dataAsDataFrame$Q1..Overall..how.did.you.feel.about.the.service.you.received.today.)])
##Create wordcloud
library(wordcloud)
wordcloud(words = corpus,
max.words = 30,
ordered.colors = TRUE,
colors=brewer.pal(5, "Dark2")[factor(unique(dataAsDataFrame$Q1..Overall..how.did.you.feel.about.the.service.you.received.today.))])
##Create wordcloud
library(wordcloud)
wordcloud(words = corpus,
max.words = 30,
ordered.colors = TRUE,
colors=brewer.pal(5000, "Dark2")[factor(unique(dataAsDataFrame$Q1..Overall..how.did.you.feel.about.the.service.you.received.today.))])
##Create wordcloud
library(wordcloud)
wordcloud(words = corpus,
max.words = 30,
ordered.colors = TRUE,
colors=brewer.pal(8, "Dark2")[factor(unique(dataAsDataFrame$Q1..Overall..how.did.you.feel.about.the.service.you.received.today.))])
library(wordcloud)
wordcloud(words = corpus,
max.words = 30,
ordered.colors = TRUE
)
library(wordcloud)
wordcloud(words = corpus,
max.words = 30,
ordered.colors = TRUE
)
library(wordcloud)
wordcloud(words = corpus,
max.words = 30,
ordered.colors = TRUE
)
library(wordcloud)
wordcloud(words = corpus,
max.words = 30,
ordered.colors = TRUE
)
library(wordcloud)
wordcloud(words = corpus,
max.words = 30,
ordered.colors = TRUE
)
library(wordcloud)
wordcloud(words = corpus,
max.words = 30,
ordered.colors = TRUE
)
help(wordcloud)
library(wordcloud)
wordcloud(words = corpus,
max.words = 30,
ordered.colors = TRUE,
colors = "black")
##Create wordcloud
library(wordcloud)
wordcloud(words = corpus,
max.words = 30,
ordered.colors = TRUE,
colors = "green")
##Create wordcloud
library(wordcloud)
wordcloud(words = corpus,
max.words = 30,
ordered.colors = FALSE,
colors = "green")
View(dataAsDataFrame)
##Create wordcloud
library(wordcloud)
wordcloud(words = corpus,
max.words = 30,
ordered.colors = FALSE,
colors = brewer.pal(8, "Dark2")[factor(dataAsDataFrame$Q1..Overall..how.did.you.feel.about.the.service.you.received.today.)])
help(brewer.pal)
save.image("~/textMineVOL.RData")
##Create wordcloud
library(wordcloud)
wordcloud(words = corpus,
max.words = 100,
ordered.colors = FALSE,
colors = brewer.pal(8, "Dark2")[factor(dataAsDataFrame$Q1..Overall..how.did.you.feel.about.the.service.you.received.today.)])
View(dataAsDataFrame)
help(wordcloud)
help(brewer.pal)
##Create wordcloud
library(wordcloud)
wordcloud(words = corpus,
max.words = 100,
ordered.colors = FALSE,
colors = brewer.pal(5, "Dark2", exact.n = TRUE)[factor(dataAsDataFrame$Q1..Overall..how.did.you.feel.about.the.service.you.received.today.)])
##Create wordcloud
library(wordcloud)
wordcloud(words = corpus,
max.words = 100,
ordered.colors = FALSE,
colors = brewer.pal(5, "Dark2", exact.5 = TRUE)[factor(dataAsDataFrame$Q1..Overall..how.did.you.feel.about.the.service.you.received.today.)])
##Create wordcloud
library(wordcloud)
wordcloud(words = corpus,
max.words = 100,
ordered.colors = FALSE,
colors = brewer.pal(5, "Dark2", exact.5 = TRUE)[factor(dataAsDataFrame$Q1..Overall..how.did.you.feel.about.the.service.you.received.today.)])
##Create wordcloud
library(wordcloud)
wordcloud(words = corpus,
max.words = 100,
ordered.colors = FALSE,
colors = brewer.pal("Dark2", exact.5 = TRUE)[factor(dataAsDataFrame$Q1..Overall..how.did.you.feel.about.the.service.you.received.today.)])
##Create wordcloud
library(wordcloud)
wordcloud(words = corpus,
max.words = 100,
ordered.colors = FALSE,
colors = brewer.pal(5, "Dark2")[factor(dataAsDataFrame$Q1..Overall..how.did.you.feel.about.the.service.you.received.today.)])
##Create wordcloud
library(wordcloud)
wordcloud(words = corpus,
max.words = 100,
ordered.colors = FALSE,
colors = brewer.pal(5, "Dark2")[factor(dataAsDataFrame$Q1..Overall..how.did.you.feel.about.the.service.you.received.today.)])
##Create wordcloud
library(wordcloud)
wordcloud(words = corpus,
max.words = 100,
ordered.colors = FALSE,
colors = brewer.pal(5, "Dark2")[factor(dataAsDataFrame$Q1..Overall..how.did.you.feel.about.the.service.you.received.today.)])
##Create wordcloud
library(wordcloud)
wordcloud(words = corpus,
max.words = 100,
ordered.colors = FALSE,
colors = brewer.pal(5, "Dark2")[factor(dataAsDataFrame$Q1..Overall..how.did.you.feel.about.the.service.you.received.today.)])
library(dplyr)
help("data_frame")
library(tidytext)
install.packages("tidytext")
library(tidytext)
sentiments
help("get_sentiments")
View(dataAsDataFrame)
corpus <- Corpus(VectorSource(dataAsDataFrame$characterVector3))
corpus[[1]]$content
corpus <- tm_map(corpus, content_transformer(tolower))
corpus <- tm_map(corpus, removePunctuation)
corpus <- tm_map(corpus, removeWords, stopwords("english"))
corpus <- tm_map(corpus, stripWhitespace)
corpus <- tm_map(corpus, PlainTextDocument)
corpus[[1]]$content
##Add snowball library
library(SnowballC)
corpus <- Corpus(VectorSource(corpus))
##Create wordcloud
library(wordcloud)
wordcloud(words = corpus,
max.words = 100,
ordered.colors = FALSE,
colors = brewer.pal(5, "Dark2")[factor(dataAsDataFrame$Q1..Overall..how.did.you.feel.about.the.service.you.received.today.)])
corpus <- Corpus(VectorSource(dataAsDataFrame$characterVector5))
corpus[[1]]$content
corpus <- tm_map(corpus, content_transformer(tolower))
corpus <- tm_map(corpus, removePunctuation)
corpus <- tm_map(corpus, removeWords, stopwords("english"))
corpus <- tm_map(corpus, stripWhitespace)
corpus <- tm_map(corpus, PlainTextDocument)
corpus[[1]]$content
##Add snowball library
library(SnowballC)
corpus <- Corpus(VectorSource(corpus))
##Create wordcloud
library(wordcloud)
wordcloud(words = corpus,
max.words = 100,
ordered.colors = FALSE,
colors = brewer.pal(5, "Dark2")[factor(dataAsDataFrame$Q1..Overall..how.did.you.feel.about.the.service.you.received.today.)])
sentiments
austen_books()
help(austen_book())
library(dplyr)
help(austen_book())
austen_books()
help("tidytext")
##corpus <- Corpus(VectorSource(dataAsDataFrame$characterVector5)) - initial example withoiut the for loop
for (i in 1:5){
corpus <- Corpus(VectorSource(dataAsDataFrame[,c(i)]))
corpus[[1]]$content
corpus <- tm_map(corpus, content_transformer(tolower))
corpus <- tm_map(corpus, removePunctuation)
corpus <- tm_map(corpus, removeWords, stopwords("english"))
corpus <- tm_map(corpus, stripWhitespace)
corpus <- tm_map(corpus, PlainTextDocument)
corpus[[1]]$content
##Add snowball library
library(SnowballC)
corpus <- Corpus(VectorSource(corpus))
##Create wordcloud
library(wordcloud)
wordcloud <- wordcloud(words = corpus,
max.words = 100,
ordered.colors = FALSE,
colors = brewer.pal(5, "Dark2")[factor(dataAsDataFrame$Q1..Overall..how.did.you.feel.about.the.service.you.received.today.)])
dev.off()
}
for (i in 1:5){
corpus <- Corpus(VectorSource(dataAsDataFrame[,c(i)]))
corpus[[1]]$content
corpus <- tm_map(corpus, content_transformer(tolower))
corpus <- tm_map(corpus, removePunctuation)
corpus <- tm_map(corpus, removeWords, stopwords("english"))
corpus <- tm_map(corpus, stripWhitespace)
corpus <- tm_map(corpus, PlainTextDocument)
corpus[[1]]$content
##Add snowball library
library(SnowballC)
corpus <- Corpus(VectorSource(corpus))
##Create wordcloud
library(wordcloud)
wordcloud <- wordcloud(words = corpus,
max.words = 100,
ordered.colors = FALSE,
colors = brewer.pal(5, "Dark2")[factor(dataAsDataFrame$Q1..Overall..how.did.you.feel.about.the.service.you.received.today.)])
dev.off ()
}
View(dataAsDataFrame)
##corpus <- Corpus(VectorSource(dataAsDataFrame$characterVector5)) - initial example withoiut the for loop
for (i in 6:10){
corpus <- Corpus(VectorSource(dataAsDataFrame[,c(i)]))
corpus[[1]]$content
corpus <- tm_map(corpus, content_transformer(tolower))
corpus <- tm_map(corpus, removePunctuation)
corpus <- tm_map(corpus, removeWords, stopwords("english"))
corpus <- tm_map(corpus, stripWhitespace)
corpus <- tm_map(corpus, PlainTextDocument)
corpus[[1]]$content
##Add snowball library
library(SnowballC)
corpus <- Corpus(VectorSource(corpus))
##Create wordcloud
library(wordcloud)
wordcloud <- wordcloud(words = corpus,
max.words = 100,
ordered.colors = FALSE,
colors = brewer.pal(5, "Dark2")[factor(dataAsDataFrame$Q1..Overall..how.did.you.feel.about.the.service.you.received.today.)])
dev.off ()
}
##corpus <- Corpus(VectorSource(dataAsDataFrame$characterVector5)) - initial example withoiut the for loop
for (i in 6:10){
corpus <- Corpus(VectorSource(dataAsDataFrame[,c(i)]))
corpus[[1]]$content
corpus <- tm_map(corpus, content_transformer(tolower))
corpus <- tm_map(corpus, removePunctuation)
corpus <- tm_map(corpus, removeWords, stopwords("english"))
corpus <- tm_map(corpus, stripWhitespace)
corpus <- tm_map(corpus, PlainTextDocument)
corpus[[1]]$content
##Add snowball library
library(SnowballC)
corpus <- Corpus(VectorSource(corpus))
##Create wordcloud
library(wordcloud)
wordcloud <- wordcloud(words = corpus,
max.words = 50,
ordered.colors = FALSE,
colors = brewer.pal(5, "Dark2")[factor(dataAsDataFrame$Q1..Overall..how.did.you.feel.about.the.service.you.received.today.)])
dev.off ()
}
##corpus <- Corpus(VectorSource(dataAsDataFrame$characterVector5)) - initial example withoiut the for loop
for (i in 6:10){
corpus <- Corpus(VectorSource(dataAsDataFrame[,c(i)]))
corpus[[1]]$content
corpus <- tm_map(corpus, content_transformer(tolower))
corpus <- tm_map(corpus, removePunctuation)
corpus <- tm_map(corpus, removeWords, stopwords("english"))
corpus <- tm_map(corpus, stripWhitespace)
corpus <- tm_map(corpus, PlainTextDocument)
corpus[[1]]$content
##Add snowball library
library(SnowballC)
corpus <- Corpus(VectorSource(corpus))
##Create wordcloud
library(wordcloud)
wordcloud <- wordcloud(words = corpus,
max.words = 50,
ordered.colors = FALSE,
colors = brewer.pal(5, "Dark2")[factor(dataAsDataFrame$Q1..Overall..how.did.you.feel.about.the.service.you.received.today.)])
plot(wordcloud)
dev.off ()
}
##corpus <- Corpus(VectorSource(dataAsDataFrame$characterVector5)) - initial example withoiut the for loop
for (i in 6:10){
corpus <- Corpus(VectorSource(dataAsDataFrame[,c(i)]))
corpus[[1]]$content
corpus <- tm_map(corpus, content_transformer(tolower))
corpus <- tm_map(corpus, removePunctuation)
corpus <- tm_map(corpus, removeWords, stopwords("english"))
corpus <- tm_map(corpus, stripWhitespace)
corpus <- tm_map(corpus, PlainTextDocument)
corpus[[1]]$content
##Add snowball library
library(SnowballC)
corpus <- Corpus(VectorSource(corpus))
##Create wordcloud
library(wordcloud)
wordcloud(words = corpus,
max.words = 50,
ordered.colors = FALSE,
colors = brewer.pal(5, "Dark2")[factor(dataAsDataFrame$Q1..Overall..how.did.you.feel.about.the.service.you.received.today.)])
dev.off ()
}
library(ggplot)
library(ggplot2)
help("ggplot2")
autoauto
autoplot(dataAsDataFrame$Q1..Overall..how.did.you.feel.about.the.service.you.received.today.)
autoplot(dataAsDataFrame$characterVector2)
geom_bar(data = dataAsDataFrame$characterVector)
geom_bar(data = X417016$`Q1. Overall, how did you feel about the service you received today?`)
geom_bar(data = as.numeric(X417016$`Q1. Overall, how did you feel about the service you received today?`))
plot(dataAsDataFrame$characterVector2
)
plot(dataAsDataFrame$characterVector2
)
library(shiny)
ui <- fluidPage()
server <- function(input, output) {}
shinyApp(ui = ui, server = server)
runApp('shiny app')
runApp('shiny app')
library(googleAnalyticsR)
## authenticate, or use the RStudio Addin "Google API Auth" with analytics scopes set
ga_auth()
account_list <- google_analytics_account_list()
View(account_list)
## account_list will have a column called "viewId"
account_list$viewId
## View account_list and pick the viewId you want to extract data from
ga_id <- account_list$viewId[[6]]
## simple query to derive number of sessions, number of users and pages viewed per session - change it to weekly?
monthlydataSessions <- google_analytics_4(ga_id,
date_range = c("2017-01-01", "2017-10-31"),
metrics = "sessions", dimensions = "yearMonth")
monthlydataUsers <- google_analytics_4(ga_id,
date_range = c("2017-01-01", "2017-10-31"),
metrics = "users", dimensions = "yearMonth")
monthlydataPagesViewsPerSession <- google_analytics_4(ga_id,
date_range = c("2017-01-01", "2017-10-31"),
metrics = "pageviewsPerSession", dimensions = "yearMonth")
speed <- google_analytics_4(ga_id,
date_range = c("2017-01-01", "2017-10-31"),
metrics = "avgPageLoadTime", dimensions = "yearWeek") ##average page load time for every week and then bind the data to one file with - what kind of week is that
speedByBrowser <- google_analytics_4(ga_id,
date_range = c("2017-01-01", "2017-10-31"),
metrics = "avgPageLoadTime", dimensions = c("yearWeek", "browser"), dim_filters = c("Edge", "Internet Explorer", "Opera", "Chrome", "Firefox", "Safari", "Samsung Internet"))
##add browser filters
df1 <- filter("browser" == "Edge")
df2 <- filter("browser" == "Internet Explorer")
df1 <- filter("browser" == "Opera")
df1 <- filter("browser" == "Chrome")
df1 <- filter("browser" == "Firefox")
df1 <- filter("browser" == "Safari")
df1 <- filter("browser" == "Samsung Internet")
df1 <- filter("browser", "Equals", "Edge")
df1 <- filter("browser", "EQUALS", "Edge")
df1 <- filter("browser", "EXACT", "Edge", caseSensitive = FALSE)
df1 <- filter("browser", "EXACT", "Edge")
df1 <- dim_filter("browser", "EXACT", "Edge")
df1 <- dim_filter("browser", "EXACT", "Edge")
df2 <- dim_filter("browser", "EXACT", "Internet Explorer")
df3 <- dim_filter("browser", "EXACT","Opera")
df4 <- dim_filter("browser", "EXACT","Chrome")
df5 <- dim_filter("browser", "EXACT","Firefox")
df6 <- dim_filter("browser", "EXACT","Safari")
df7 <- dim_filter("browser", "EXACT","Samsung Internet")
speedByBrowser <- google_analytics_4(ga_id,
date_range = c("2017-01-01", "2017-10-31"),
metrics = "avgPageLoadTime", dimensions = c("yearWeek", "browser"), dim_filters = list(df1, df2, df3, df4, df5, df6)) ##dimension filtering is wrong
df1 <- dim_filter("browser", "EXACT", c("Edge", "Internet Explorer"))
speedByBrowser <- google_analytics_4(ga_id,
date_range = c("2017-01-01", "2017-10-31"),
metrics = "avgPageLoadTime", dimensions = c("yearWeek", "browser"), dim_filters = list(df1)) ##dimension filtering is wrong
speedByBrowser <- google_analytics_4(ga_id,
date_range = c("2017-01-01", "2017-10-31"),
metrics = "avgPageLoadTime", dimensions = c("yearWeek", "browser"), dim_filters = df1) ##dimension filtering is wrong
shiny::runApp('Desktop/App-1')
shiny::runApp('DVSA/various-analytics-stuff/App-2')
